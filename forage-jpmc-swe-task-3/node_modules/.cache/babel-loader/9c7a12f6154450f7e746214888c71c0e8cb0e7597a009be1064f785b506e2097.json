{"ast":null,"code":"import React, { Component } from 'react';\nimport { DataManipulator } from './DataManipulator';\nimport './Graph.css';\nclass Graph extends Component {\n  constructor() {\n    super(...arguments);\n    this.table = void 0;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement('perspective-viewer');\n  }\n  componentDidMount() {\n    // Get element from the DOM.\n    const elem = document.getElementsByTagName('perspective-viewer')[0];\n    const schema = {\n      price_abc: 'float',\n      price_def: 'float',\n      ratio: 'float',\n      timestamp: 'date',\n      upper_bound: 'float',\n      lower_bound: 'float',\n      trigger_alert: 'float'\n    };\n    if (window.perspective) {\n      this.table = window.perspective.worker().table(schema);\n    }\n    if (this.table) {\n      // Load the `table` in the `<perspective-viewer>` DOM reference.\n      elem.load(this.table);\n      elem.setAttribute('view', 'y_line');\n      elem.setAttribute('row-pivots', '[\"timestamp\"]');\n      elem.setAttribute('columns', '[\"ratio\", \"lower_bound\", \"upper_bound\", \"trigger_alert\"]');\n      elem.setAttribute('aggregates', JSON.stringify({\n        price_abc: 'avg',\n        price_def: 'avg',\n        ratio: 'avg',\n        timestamp: 'distinct count',\n        upper_bound: 'avg',\n        lower_bound: 'avg',\n        trigger_alert: 'avg'\n      }));\n    }\n  }\n  componentDidUpdate() {\n    if (this.table) {\n      this.table.update([DataManipulator.generateRow(this.props.data)]);\n    }\n  }\n}\nexport default Graph;","map":{"version":3,"names":["React","Component","DataManipulator","Graph","constructor","arguments","table","render","createElement","componentDidMount","elem","document","getElementsByTagName","schema","price_abc","price_def","ratio","timestamp","upper_bound","lower_bound","trigger_alert","window","perspective","worker","load","setAttribute","JSON","stringify","componentDidUpdate","update","generateRow","props","data"],"sources":["C:/Users/Kleiton/OneDrive/Documentos/Git/JPMorgan-virtual-internship/forage-jpmc-swe-task-3/src/Graph.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from '@finos/perspective';\r\nimport { ServerRespond } from './DataStreamer';\r\nimport { DataManipulator } from './DataManipulator';\r\nimport './Graph.css';\r\n\r\ninterface IProps {\r\n  data: ServerRespond[],\r\n}\r\n\r\ninterface PerspectiveViewerElement extends HTMLElement {\r\n  load: (table: Table) => void,\r\n}\r\nclass Graph extends Component<IProps, {}> {\r\n  table: Table | undefined;\r\n\r\n  render() {\r\n    return React.createElement('perspective-viewer');\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Get element from the DOM.\r\n    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;\r\n\r\n    const schema = {\r\n      price_abc: 'float',\r\n      price_def: 'float',\r\n      ratio: 'float',\r\n      timestamp: 'date',\r\n      upper_bound: 'float',\r\n      lower_bound: 'float',\r\n      trigger_alert: 'float'\r\n    };\r\n\r\n    if (window.perspective) {\r\n       this.table = window.perspective.worker().table(schema);\r\n    }\r\n    if (this.table) {\r\n      // Load the `table` in the `<perspective-viewer>` DOM reference.\r\n      elem.load(this.table);\r\n      elem.setAttribute('view', 'y_line');\r\n      elem.setAttribute('row-pivots', '[\"timestamp\"]');\r\n      elem.setAttribute('columns', '[\"ratio\", \"lower_bound\", \"upper_bound\", \"trigger_alert\"]');\r\n      elem.setAttribute('aggregates', JSON.stringify({\r\n        price_abc: 'avg',\r\n        price_def: 'avg',\r\n        ratio:'avg',\r\n        timestamp: 'distinct count',\r\n        upper_bound: 'avg',\r\n        lower_bound: 'avg',\r\n        trigger_alert: 'avg',\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.table) {\r\n      this.table.update([\r\n        DataManipulator.generateRow(this.props.data),\r\n      ]);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Graph;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAGxC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAO,aAAa;AASpB,MAAMC,KAAK,SAASF,SAAS,CAAa;EAAAG,YAAA;IAAA,SAAAC,SAAA;IAAA,KACxCC,KAAK;EAAA;EAELC,MAAMA,CAAA,EAAG;IACP,oBAAOP,KAAK,CAACQ,aAAa,CAAC,oBAAoB,CAAC;EAClD;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAwC;IAE1G,MAAMC,MAAM,GAAG;MACbC,SAAS,EAAE,OAAO;MAClBC,SAAS,EAAE,OAAO;MAClBC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,MAAM;MACjBC,WAAW,EAAE,OAAO;MACpBC,WAAW,EAAE,OAAO;MACpBC,aAAa,EAAE;IACjB,CAAC;IAED,IAAIC,MAAM,CAACC,WAAW,EAAE;MACrB,IAAI,CAAChB,KAAK,GAAGe,MAAM,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC,CAACjB,KAAK,CAACO,MAAM,CAAC;IACzD;IACA,IAAI,IAAI,CAACP,KAAK,EAAE;MACd;MACAI,IAAI,CAACc,IAAI,CAAC,IAAI,CAAClB,KAAK,CAAC;MACrBI,IAAI,CAACe,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;MACnCf,IAAI,CAACe,YAAY,CAAC,YAAY,EAAE,eAAe,CAAC;MAChDf,IAAI,CAACe,YAAY,CAAC,SAAS,EAAE,0DAA0D,CAAC;MACxFf,IAAI,CAACe,YAAY,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC;QAC7Cb,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAC,KAAK;QACXC,SAAS,EAAE,gBAAgB;QAC3BC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClBC,aAAa,EAAE;MACjB,CAAC,CAAC,CAAC;IACL;EACF;EAEAQ,kBAAkBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACtB,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACuB,MAAM,CAAC,CAChB3B,eAAe,CAAC4B,WAAW,CAAC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAC7C,CAAC;IACJ;EACF;AACF;AAEA,eAAe7B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}