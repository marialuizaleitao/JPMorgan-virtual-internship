{"ast":null,"code":"import React, { Component } from 'react';\nimport { DataManipulator } from './DataManipulator';\nimport './Graph.css';\nclass Graph extends Component {\n  constructor() {\n    super(...arguments);\n    this.table = void 0;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement('perspective-viewer');\n  }\n  componentDidMount() {\n    // Get element from the DOM.\n    const elem = document.getElementsByTagName('perspective-viewer')[0];\n    const schema = {\n      stock: 'string',\n      top_ask_price: 'float',\n      top_bid_price: 'float',\n      timestamp: 'date'\n    };\n    if (window.perspective && window.perspective.worker()) {\n      this.table = window.perspective.worker().table(schema);\n    }\n    if (this.table) {\n      // Load the `table` in the `<perspective-viewer>` DOM reference.\n      elem.load(this.table);\n      elem.setAttribute('view', 'y_line');\n      elem.setAttribute('column-pivots', '[\"stock\"]');\n      elem.setAttribute('row-pivots', '[\"timestamp\"]');\n      elem.setAttribute('columns', '[\"top_ask_price\"]');\n      elem.setAttribute('aggregates', JSON.stringify({\n        stock: 'distinctcount',\n        top_ask_price: 'avg',\n        top_bid_price: 'avg',\n        timestamp: 'distinct count'\n      }));\n    }\n  }\n  componentDidUpdate() {\n    if (this.table) {\n      this.table.update(DataManipulator.generateRow(this.props.data));\n    }\n  }\n}\nexport default Graph;","map":{"version":3,"names":["React","Component","DataManipulator","Graph","constructor","arguments","table","render","createElement","componentDidMount","elem","document","getElementsByTagName","schema","stock","top_ask_price","top_bid_price","timestamp","window","perspective","worker","load","setAttribute","JSON","stringify","componentDidUpdate","update","generateRow","props","data"],"sources":["C:/Users/Kleiton/OneDrive/Documentos/Git/JPMorgan-virtual-internship/forage-jpmc-swe-task-3/src/Graph.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from '@finos/perspective';\r\nimport { ServerRespond } from './DataStreamer';\r\nimport { DataManipulator } from './DataManipulator';\r\nimport './Graph.css';\r\n\r\ninterface IProps {\r\n  data: ServerRespond[],\r\n}\r\n\r\ninterface PerspectiveViewerElement extends HTMLElement {\r\n  load: (table: Table) => void,\r\n}\r\nclass Graph extends Component<IProps, {}> {\r\n  table: Table | undefined;\r\n\r\n  render() {\r\n    return React.createElement('perspective-viewer');\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Get element from the DOM.\r\n    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;\r\n\r\n    const schema = {\r\n      stock: 'string',\r\n      top_ask_price: 'float',\r\n      top_bid_price: 'float',\r\n      timestamp: 'date',\r\n    };\r\n\r\n    if (window.perspective && window.perspective.worker()) {\r\n      this.table = window.perspective.worker().table(schema);\r\n    }\r\n    if (this.table) {\r\n      // Load the `table` in the `<perspective-viewer>` DOM reference.\r\n      elem.load(this.table);\r\n      elem.setAttribute('view', 'y_line');\r\n      elem.setAttribute('column-pivots', '[\"stock\"]');\r\n      elem.setAttribute('row-pivots', '[\"timestamp\"]');\r\n      elem.setAttribute('columns', '[\"top_ask_price\"]');\r\n      elem.setAttribute('aggregates', JSON.stringify({\r\n        stock: 'distinctcount',\r\n        top_ask_price: 'avg',\r\n        top_bid_price: 'avg',\r\n        timestamp: 'distinct count',\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.table) {\r\n      this.table.update(\r\n        DataManipulator.generateRow(this.props.data),\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAGxC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAO,aAAa;AASpB,MAAMC,KAAK,SAASF,SAAS,CAAa;EAAAG,YAAA;IAAA,SAAAC,SAAA;IAAA,KACxCC,KAAK;EAAA;EAELC,MAAMA,CAAA,EAAG;IACP,oBAAOP,KAAK,CAACQ,aAAa,CAAC,oBAAoB,CAAC;EAClD;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAwC;IAE1G,MAAMC,MAAM,GAAG;MACbC,KAAK,EAAE,QAAQ;MACfC,aAAa,EAAE,OAAO;MACtBC,aAAa,EAAE,OAAO;MACtBC,SAAS,EAAE;IACb,CAAC;IAED,IAAIC,MAAM,CAACC,WAAW,IAAID,MAAM,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC,EAAE;MACrD,IAAI,CAACd,KAAK,GAAGY,MAAM,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC,CAACd,KAAK,CAACO,MAAM,CAAC;IACxD;IACA,IAAI,IAAI,CAACP,KAAK,EAAE;MACd;MACAI,IAAI,CAACW,IAAI,CAAC,IAAI,CAACf,KAAK,CAAC;MACrBI,IAAI,CAACY,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;MACnCZ,IAAI,CAACY,YAAY,CAAC,eAAe,EAAE,WAAW,CAAC;MAC/CZ,IAAI,CAACY,YAAY,CAAC,YAAY,EAAE,eAAe,CAAC;MAChDZ,IAAI,CAACY,YAAY,CAAC,SAAS,EAAE,mBAAmB,CAAC;MACjDZ,IAAI,CAACY,YAAY,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC;QAC7CV,KAAK,EAAE,eAAe;QACtBC,aAAa,EAAE,KAAK;QACpBC,aAAa,EAAE,KAAK;QACpBC,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;IACL;EACF;EAEAQ,kBAAkBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACnB,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACoB,MAAM,CACfxB,eAAe,CAACyB,WAAW,CAAC,IAAI,CAACC,KAAK,CAACC,IAAI,CAC7C,CAAC;IACH;EACF;AACF;AAEA,eAAe1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}